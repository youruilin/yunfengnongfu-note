import{_ as i,c as n,o as a,ag as e}from"./chunks/framework.JB0BnZq8.js";const o=JSON.parse('{"title":"项目初始化","description":"","frontmatter":{},"headers":[],"relativePath":"jp/articles/01-项目创建/01-项目创建/01-项目初始化.md","filePath":"jp/articles/01-项目创建/01-项目创建/01-项目初始化.md","lastUpdated":1752902037000}'),t={name:"jp/articles/01-项目创建/01-项目创建/01-项目初始化.md"};function l(p,s,r,h,d,k){return a(),n("div",null,[...s[0]||(s[0]=[e(`<h1 id="项目初始化" tabindex="-1">项目初始化 <a class="header-anchor" href="#项目初始化" aria-label="Permalink to &quot;项目初始化&quot;">​</a></h1><h2 id="官方推荐使用-create-vue" tabindex="-1">官方推荐使用 create vue <a class="header-anchor" href="#官方推荐使用-create-vue" aria-label="Permalink to &quot;官方推荐使用 create vue&quot;">​</a></h2><p>create-vue 是一个官方的 Vue 项目脚手架工具，用来快速创建 Vue 3 项目。默认情况下，它使用 Vite 作为构建工具：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pnpm create vue@latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>上述操作中，基于 vite 内置了 ts 依赖，快速创建项目可以说非常方便！</p><h2 id="rem-适配-路径别名" tabindex="-1">rem 适配 &amp;&amp; 路径别名 <a class="header-anchor" href="#rem-适配-路径别名" aria-label="Permalink to &quot;rem 适配 &amp;&amp; 路径别名&quot;">​</a></h2><h3 id="rem-适配" tabindex="-1">rem 适配 <a class="header-anchor" href="#rem-适配" aria-label="Permalink to &quot;rem 适配&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utils</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rem.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 基准大小</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> baseSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 37.5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scale</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.documentElement.clientWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 750</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.documentElement.style.fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> baseSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scale, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始化</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onresize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这个到处看起来没什么用，然而却是没什么用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> baseSize</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 然后在 main.ts 中：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/utils/rem&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 引入 rem 适配方案</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ 会触发 rem 适配逻辑并绑定监听事件，全局自动生效</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="路径别名" tabindex="-1">路径别名 <a class="header-anchor" href="#路径别名" aria-label="Permalink to &quot;路径别名&quot;">​</a></h3><p>tsconfig.app.json 文件中需要配置别名路径</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@vue/tsconfig/tsconfig.dom.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;env.d.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.d.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.tsx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/__tests__/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;composite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;tsBuildInfoFile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./node_modules/.tmp/tsconfig.app.tsbuildinfo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;baseUrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 这里配置了路径别名</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;paths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./src/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;noImplicitAny&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;allowJs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;skipLibCheck&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="eslint-prettier" tabindex="-1">eslint + prettier <a class="header-anchor" href="#eslint-prettier" aria-label="Permalink to &quot;eslint + prettier&quot;">​</a></h2><h3 id="系统梳理-eslint" tabindex="-1">系统梳理 eslint <a class="header-anchor" href="#系统梳理-eslint" aria-label="Permalink to &quot;系统梳理 eslint&quot;">​</a></h3><p>一句话：在运行代码前，发现语法错误和潜在bug</p><p><code>ESlint</code> 扩展会优先去查找项目根目录中的 <code>eslint.config.js</code> 配置文件，并且包括配置文件所提到的 <code>ESlint</code> 插件，也就是 <code>npm</code> 依赖包，是的没错，<code>ESlint</code> 扩展本身所需的 <code>ESlint</code> 版本和 <code>ESlint</code> 插件，都是来自于 <code>node_modules</code>，你可以试着把这个目录删了，<code>vscode</code> 中的 <code>ESlint</code> 扩展就会报错，无法运行。</p><p>但你启用 <code>vscode</code> 中的 <code>ESlint</code> 扩展之后，并不会对所有文件生效，你还需要配置 <code>ESlint</code> 扩展的设置来对所需的文件启用校验。</p><p>**粗暴提示：**从 <strong>ESLint v9 开始（也包括 v8 的 <code>flat config</code> 实验特性）</strong>，<strong>配置文件正式采用了「扁平化（Flat Config）」格式</strong>，并且：</p><blockquote><p>🚨 <strong>ESLint 9 完全移除了旧版 <code>.eslintrc</code> 系列配置支持</strong>。</p></blockquote><p>新版的配置文件，直接在代码块中进行说明：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { globalIgnores } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;eslint/config&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfigWithVueTs, vueTsConfigs } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vue/eslint-config-typescript&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pluginVue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;eslint-plugin-vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stylistic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@stylistic/eslint-plugin&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> skipFormatting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vue/eslint-config-prettier/skip-formatting&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// To allow more languages other than \`ts\` in \`.vue\` files, uncomment the following lines:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// import { configureVueProject } from &#39;@vue/eslint-config-typescript&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// configureVueProject({ scriptLangs: [&#39;ts&#39;, &#39;tsx&#39;] })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// More info at https://github.com/vuejs/eslint-config-typescript/#advanced-setup</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfigWithVueTs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app/files-to-lint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    files: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**/*.{ts,mts,tsx,vue}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    plugins: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // &#39;@stylistic&#39;: stylistic,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rules: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // semi: [&#39;error&#39;, &#39;never&#39;],</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 不允许分号结尾</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // &#39;@stylistic/indent&#39;: [&#39;error&#39;, 2],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // &#39;@stylistic/no-multiple-empty-lines&#39;: &quot;error&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // &#39;@stylistic/semi&#39;: [&#39;error&#39;, &#39;never&#39;],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  globalIgnores</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**/dist/**&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**/dist-ssr/**&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**/coverage/**&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pluginVue.configs[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flat/essential&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  vueTsConfigs.recommended,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  skipFormatting,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ✅ ✨ 插入推荐风格规则（官方建议的方式）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  stylistic.configs.recommended,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>ps：看再多的大佬对eslint+prettier的使用进行吹牛，也不如去看半小时官方文档！</p><h3 id="prettier再回顾" tabindex="-1">prettier再回顾 <a class="header-anchor" href="#prettier再回顾" aria-label="Permalink to &quot;prettier再回顾&quot;">​</a></h3><p>一句话：Prettier 更侧重于统一项目的代码风格。</p><p>因此，两者配合一起使用，比较好。</p><h4 id="📦-stylistic-插件本来的目的是什么" tabindex="-1">📦 <code>@stylistic</code> 插件本来的目的是什么？ <a class="header-anchor" href="#📦-stylistic-插件本来的目的是什么" aria-label="Permalink to &quot;📦 \`@stylistic\` 插件本来的目的是什么？&quot;">​</a></h4><blockquote><p>它的目标是把 ESLint v9 中<strong>移除的格式规则</strong>（如 <code>semi</code>、<code>indent</code> 等）<strong>重新实现为插件</strong>。</p></blockquote><p>但：</p><h4 id="❗这套规则并不是为了和-prettier-并用-而是" tabindex="-1">❗这套规则并<strong>不是为了和 Prettier 并用</strong>，而是： <a class="header-anchor" href="#❗这套规则并不是为了和-prettier-并用-而是" aria-label="Permalink to &quot;❗这套规则并**不是为了和 Prettier 并用**，而是：&quot;">​</a></h4><ul><li><strong>给不使用 Prettier 的项目提供 ESLint 的格式检查能力</strong>；</li><li>或者你希望用 ESLint 的 autofix + CI 而不用 Prettier。</li></ul><hr><h4 id="✅-官方推荐的两种做法-你只能选一个" tabindex="-1">✅ 官方推荐的两种做法（你只能选一个） <a class="header-anchor" href="#✅-官方推荐的两种做法-你只能选一个" aria-label="Permalink to &quot;✅ 官方推荐的两种做法（你只能选一个）&quot;">​</a></h4><table tabindex="0"><thead><tr><th>方案</th><th>工具</th><th>格式规则由谁管</th><th>推荐人群</th></tr></thead><tbody><tr><td>✅ 方案 A（主流）</td><td>ESLint + Prettier</td><td>Prettier</td><td>大多数团队、Vue 官方、Vite 官方</td></tr><tr><td>✅ 方案 B（少数）</td><td>ESLint + <code>@stylistic</code></td><td><code>@stylistic</code></td><td>不想用 Prettier，只想 ESLint 统一管</td></tr></tbody></table><hr><h4 id="💥-如果你强行混用会怎样" tabindex="-1">💥 如果你强行混用会怎样？ <a class="header-anchor" href="#💥-如果你强行混用会怎样" aria-label="Permalink to &quot;💥 如果你强行混用会怎样？&quot;">​</a></h4><p>比如你配置：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>stylistic.configs.recommended,</span></span>
<span class="line"><span>skipFormatting,</span></span>
<span class="line"><span>Prettier 插件,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>就会出现这些问题：</p><ul><li>ESLint 提示你：缺少分号；</li><li>Prettier 保存时自动移除分号；</li><li>你保存一次 VSCode 又被 Prettier 格式化；</li><li>Git 上永远显示文件被格式化但有规则错误；</li><li>你的 CI 永远在红绿交替中崩溃。</li></ul><hr><h4 id="✅-推荐方案-vue-项目最佳实践" tabindex="-1">✅ 推荐方案：Vue 项目最佳实践 <a class="header-anchor" href="#✅-推荐方案-vue-项目最佳实践" aria-label="Permalink to &quot;✅ 推荐方案：Vue 项目最佳实践&quot;">​</a></h4><p>🔧 配置推荐如下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ts复制编辑// eslint.config.js</span></span>
<span class="line"><span>import skipFormatting from &#39;@vue/eslint-config-prettier/skip-formatting&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default defineConfigWithVueTs(</span></span>
<span class="line"><span>  {</span></span>
<span class="line"><span>    name: &#39;linting&#39;,</span></span>
<span class="line"><span>    files: [&#39;**/*.{ts,vue}&#39;],</span></span>
<span class="line"><span>    rules: {</span></span>
<span class="line"><span>      // 这里不要启用 @stylistic 格式类规则</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  pluginVue.configs[&#39;flat/essential&#39;],</span></span>
<span class="line"><span>  vueTsConfigs.recommended,</span></span>
<span class="line"><span>  skipFormatting, // 👈 禁用所有格式检查</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>然后：</p><ul><li>用 <code>.prettierrc</code> 管格式（semi、quotes、printWidth）</li><li>用 ESLint 管逻辑错误（如 no-unused-vars、no-undef、vue/no-mutating-props）</li></ul><hr><p>✅ 最终建议</p><table tabindex="0"><thead><tr><th>场景</th><th>是否推荐使用 <code>@stylistic</code></th></tr></thead><tbody><tr><td>✅ 不使用 Prettier，全部交给 ESLint</td><td>推荐</td></tr><tr><td>✅ 使用 Prettier 管格式</td><td>❌ 不要使用 <code>@stylistic</code> 推荐配置</td></tr><tr><td>✅ 想自定义格式化规则（不用 Prettier）</td><td>可用 <code>@stylistic</code> 替代传统 ESLint 格式规则</td></tr></tbody></table><hr><p>如果你已经在用 Prettier，就 <strong>不要用 <code>stylistic.configs.recommended</code></strong>，你只需要：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import skipFormatting from &#39;@vue/eslint-config-prettier/skip-formatting&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>即可。</p><h3 id="硬菜" tabindex="-1">硬菜 <a class="header-anchor" href="#硬菜" aria-label="Permalink to &quot;硬菜&quot;">​</a></h3><p>如果使用 ESLint，需要安装 <a href="https://github.com/prettier/eslint-config-prettier#installation" target="_blank" rel="noreferrer">eslint-config-prettier</a> 以使 ESLint 和 Prettier 相互配合。它会关闭所有不必要的或可能与 Prettier 冲突的 ESLint 规则。Stylelint 有一个类似的配置：<a href="https://github.com/prettier/stylelint-config-prettier" target="_blank" rel="noreferrer">stylelint-config-prettier</a></p><p>（请参阅 <a href="https://prettier.nodejs.cn/docs/comparison" target="_blank" rel="noreferrer">Prettier 与 Linter</a> 了解有关格式化与 linting 的更多信息，<a href="https://prettier.nodejs.cn/docs/integrating-with-linters" target="_blank" rel="noreferrer">与 Linters 集成</a> 了解有关配置 linters 的更多深入信息，如果需要，请参阅 <a href="https://prettier.nodejs.cn/docs/related-projects" target="_blank" rel="noreferrer">相关项目</a> 了解更多集成可能性。）</p><p>而， <a href="https://github.com/prettier/eslint-config-prettier#installation" target="_blank" rel="noreferrer">eslint-config-prettier</a> 的任务是：关闭所有不必要的或可能与 Prettier 冲突的 ESLint 规则。</p><p>而，我们迫切需要的，是 <a href="https://github.com/prettier/eslint-plugin-prettier" target="_blank" rel="noreferrer">eslint-plugin-prettier</a> ！！将 Prettier 的格式化规则作为 ESLint 规则运行的插件，让 ESLint 报告并修复代码格式问题。</p><p>先安排上再说：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pnpm install --save-dev eslint-plugin-prettier eslint-config-prettier</span></span>
<span class="line"><span>pnpm install --save-dev --save-exact prettier</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Configuration (new: <code>eslint.config.js</code>)</p><p>For <a href="https://eslint.org/docs/latest/use/configure/configuration-files-new" target="_blank" rel="noreferrer">flat configuration</a>, this plugin ships with an <code>eslint-plugin-prettier/recommended</code> config that sets up both <code>eslint-plugin-prettier</code> and <a href="https://github.com/prettier/eslint-config-prettier" target="_blank" rel="noreferrer"><code>eslint-config-prettier</code></a> in one go.</p><p>Import <code>eslint-plugin-prettier/recommended</code> and add it as the <em>last</em> item in the configuration array in your <code>eslint.config.js</code> file so that <code>eslint-config-prettier</code> has the opportunity to override other configs:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import eslintPluginPrettierRecommended from &#39;eslint-plugin-prettier/recommended&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>module.exports = [</span></span>
<span class="line"><span>  // Any other config imports go at the top</span></span>
<span class="line"><span>  eslintPluginPrettierRecommended,</span></span>
<span class="line"><span>];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>This will:</p><ul><li>Enable the <code>prettier/prettier</code> rule.</li><li>Disable the <code>arrow-body-style</code> and <code>prefer-arrow-callback</code> rules which are problematic with this plugin - see the below for why.</li><li>Enable the <code>eslint-config-prettier</code> config which will turn off ESLint rules that conflict with Prettier.</li></ul><p>说人话就是：<code>eslint-plugin-prettier</code> 并不内置多个格式规则，它只提供一条 <code>prettier/prettier</code> 规则，用来让 ESLint 调用 Prettier 并把格式问题当成 ESLint 错误报告出来。</p><p>它的生效原理为：已经为项目安装并注册了 <code>prettier</code> 插件，并告诉 ESLint：</p><blockquote><p>「我知道有一个插件叫 <code>prettier</code>，它定义了一条规则叫 <code>prettier</code>。」</p></blockquote><p><strong><code>eslintPluginPrettierRecommended</code> 是 <code>eslint-plugin-prettier</code> 插件提供的一套推荐配置</strong>，它等价于：</p><blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ 手动写规则</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;prettier/prettier&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote><p>总结一句话：</p><blockquote><p><strong><code>eslint-plugin-prettier</code> 使用的规则，最终来源就是你的 <code>.prettierrc</code> 或 <code>prettier.config.js</code> 配置文件中的设置</strong>，比如 <code>semi</code>、<code>singleQuote</code>、<code>printWidth</code> 等。</p></blockquote><p>ps：Prettier 官方支持<strong>多种配置文件格式</strong>，可以任选一种来写你的配置，<strong><code>.prettierrc.json</code> 只是其中一种</strong>。</p><hr><p>🗂️ Prettier 支持的配置文件格式（官方支持）：</p><table tabindex="0"><thead><tr><th>文件名</th><th>格式</th><th>说明</th></tr></thead><tbody><tr><td><code>.prettierrc</code></td><td>JSON 或 YAML</td><td>没有后缀，自动按 JSON 或 YAML 解析</td></tr><tr><td><code>.prettierrc.json</code></td><td>JSON</td><td>✅ 最常见格式之一（也是你用的）</td></tr><tr><td><code>.prettierrc.yaml</code> / <code>.prettierrc.yml</code></td><td>YAML</td><td>比较少用</td></tr><tr><td><code>.prettierrc.js</code></td><td>JavaScript</td><td>需要逻辑时使用（如条件判断）</td></tr><tr><td><code>prettier.config.js</code></td><td>JavaScript</td><td>同 <code>.prettierrc.js</code>，但命名更明确</td></tr><tr><td><code>package.json</code> 中的 <code>&quot;prettier&quot;</code> 字段</td><td>JSON</td><td>小型项目可用，但容易混乱</td></tr></tbody></table>`,75)])])}const u=i(t,[["render",l]]);export{o as __pageData,u as default};
