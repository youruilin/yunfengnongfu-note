import{_ as e}from"./chunks/image-小程序页面组成.XFljPU5m.js";import{_ as i,c as s,o as a,ag as l}from"./chunks/framework.JB0BnZq8.js";const n="/vitepress_init/assets/image-app-json.B_3GJAbb.png",r="/vitepress_init/assets/image-sitemap.DgoQKdh2.png",d="/vitepress_init/assets/image-%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%9A%84json%E6%96%87%E4%BB%B6.DcXVkUE5.png",o="/vitepress_init/assets/image-%E6%96%B0%E5%BB%BA%E9%A1%B5%E9%9D%A2.B8SH6wBi.png",c="/vitepress_init/assets/image-%E9%A1%B9%E7%9B%AE%E9%A6%96%E9%A1%B5%E9%9D%A2.D__Dc6pS.png",p="/vitepress_init/assets/image-%E5%AE%BF%E4%B8%BB%E7%8E%AF%E5%A2%83.OO86dBzz.png",h="/vitepress_init/assets/image-%E9%80%9A%E4%BF%A1%E7%9A%84%E4%B8%BB%E9%A2%98.DlkNEDlS.png",g="/vitepress_init/assets/image-view%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.CXvGMdpD.png",k="/vitepress_init/assets/image-%E7%BA%B5%E5%90%91%E6%BB%9A%E5%8A%A8%E6%95%88%E6%9E%9C.DxJi7UK1.png",y="/vitepress_init/assets/image-%E8%BD%AE%E6%92%AD%E6%95%88%E6%9E%9C.CZdhwGFH.png",E="/vitepress_init/assets/image-text%E7%BB%84%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.DkUQHWFx.png",u="/vitepress_init/assets/image-rich-text%E7%BB%84%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.mQBrtNgp.png",x="/vitepress_init/assets/image-button%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.Dau3dnXT.png",A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/01-项目创建/02-小程序/01-项目结构.md","filePath":"articles/01-项目创建/02-小程序/01-项目结构.md","lastUpdated":1752804214000}'),m={name:"articles/01-项目创建/02-小程序/01-项目结构.md"};function b(f,t,_,B,F,q){return a(),s("div",null,[...t[0]||(t[0]=[l('<h2 id="_1-项目结构" tabindex="-1">1. 项目结构 <a class="header-anchor" href="#_1-项目结构" aria-label="Permalink to &quot;1. 项目结构&quot;">​</a></h2><ul><li>① pages 用来存放所有小程序的页面</li><li>② utils 用来存放工具性质的模块（例如：格式化时间的自定义模块）</li><li>③ app.js 小程序项目的入口文件</li><li>④ app.json 小程序项目的全局配置文件</li><li>⑤ app.wxss 小程序项目的全局样式文件</li><li>⑥ project.config.json 项目的配置文件</li><li>⑦ sitemap.json 用来配置小程序及其页面是否允许被微信索引</li></ul><h2 id="_2-页面组成" tabindex="-1">2. 页面组成 <a class="header-anchor" href="#_2-页面组成" aria-label="Permalink to &quot;2. 页面组成&quot;">​</a></h2><p>小程序官方建议把所有小程序的页面，都存放在pages 目录 中，以 单独的文件夹 存在，如图所示：</p><figure><img src="'+e+'" alt=""><figcaption>image-20250717082640431</figcaption></figure><p>其中，每个页面 由 4 个基本文件 组成，它们分别是：</p><ul><li>① .js 文件（页面的脚本文件，存放页面的数据、事件处理函数等）</li><li>② .json 文件（当前页面的配置文件，配置窗口的外观、表现等）</li><li>③ .wxml 文件（页面的模板结构文件）</li><li>④ .wxss 文件（当前页面的样式表文件）</li></ul><h3 id="_2-1-json配置文件" tabindex="-1">2.1 json配置文件 <a class="header-anchor" href="#_2-1-json配置文件" aria-label="Permalink to &quot;2.1 json配置文件&quot;">​</a></h3><p>JSON是一种数据格式 ，在实际开发中 JSON 总是以 配置文件 的形式出现。小程序项目中也不例外：通过不同的 .json 配置文件，可以对小程序项目进行不同级别的配置。小程序项目中有 4 种 json 配置文件，分别是：</p><ul><li>① 项目根录中的 app.json 配置文件</li><li>② 项目根录中的 project.config.json 配置文件</li><li>③ 项目根录中的 sitemap.json 配置文件</li><li>④ 每个页面文件夹中的 .json 配</li></ul><h4 id="_2-1-1-app-json-文件" tabindex="-1">2.1.1 app.json 文件 <a class="header-anchor" href="#_2-1-1-app-json-文件" aria-label="Permalink to &quot;2.1.1 app.json 文件&quot;">​</a></h4><p>app.json是当前小程序的 全局配置 ，包括了小程序的 所有页面路径 、窗口外观、界面表现 、底部 tab 等。 Demo 项目里边的 app.json 配置内容如下：</p><figure><img src="'+n+'" alt=""><figcaption>image-20250717083837174</figcaption></figure><ul><li>① pages ：用来记录当前小程序所有页面的路径</li><li>② window ：全局定义小程序所有页面的背景色、文字颜色等</li><li>③ style ：全局定义小程序组件所使用的样式版本</li><li>④ sitemapLocation ：用来指明 sitemap.json 的</li></ul><h4 id="_2-1-2-project-config-json文件" tabindex="-1">2.1.2 project.config.json文件 <a class="header-anchor" href="#_2-1-2-project-config-json文件" aria-label="Permalink to &quot;2.1.2 project.config.json文件&quot;">​</a></h4><p>project.config.json 是项目配置文件，用来记录我们 对小程序开发工具所做的个性化配置 ，例如：</p><ul><li>setting 中保存了 编译相关的配置</li><li>projectname 中保存的是 项目名称</li><li>appid 中保存的是 小程序的账号 ID</li></ul><h4 id="_2-1-3-sitemap-json-文件" tabindex="-1">2.1.3 sitemap.json 文件 <a class="header-anchor" href="#_2-1-3-sitemap-json-文件" aria-label="Permalink to &quot;2.1.3 sitemap.json 文件&quot;">​</a></h4><p>微信现已开放 小程序内搜索 ，效果类似于 PC 网页的 SEO 。sitemap.json 文件用来 配置小程序页面是否允许 微信索引 。 当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索关键字和页 面的索引匹配成功的时候，小程序的页面将可能展示在搜索结果中。</p><figure><img src="'+r+'" alt=""><figcaption>image-20250717084232731</figcaption></figure><p>注意： sitemap 的索引提示是默认开启的，如需要关闭 sitemap 的索引提示，可在小程序项目配置文件 project.config.json 的 setting 中配置字段 checkSiteMap 为 false。</p><h4 id="_2-1-4-页面的-json-配置文件" tabindex="-1">2.1.4 页面的 .json 配置文件 <a class="header-anchor" href="#_2-1-4-页面的-json-配置文件" aria-label="Permalink to &quot;2.1.4 页面的 .json 配置文件&quot;">​</a></h4><p>小程序中的每一个页面，可以使用.json 文件来 对本页面的窗口外观进行配置 ，页面中的配置项会覆盖app.json 的 window 中相同的配置项 。例如：</p><figure><img src="'+d+'" alt=""><figcaption>image-20250717084445182</figcaption></figure><h4 id="_2-1-5新建项目页面" tabindex="-1">2.1.5新建项目页面 <a class="header-anchor" href="#_2-1-5新建项目页面" aria-label="Permalink to &quot;2.1.5新建项目页面&quot;">​</a></h4><p>只需要在 app.json -&gt; pages 中新增页面的存放路径，小程序开发者工具即可帮我们自动创建对应的页面文件， 如图所示：</p><figure><img src="'+o+'" alt=""><figcaption>image-20250717085313112</figcaption></figure><h4 id="_2-1-6修改项目首页" tabindex="-1">2.1.6修改项目首页 <a class="header-anchor" href="#_2-1-6修改项目首页" aria-label="Permalink to &quot;2.1.6修改项目首页&quot;">​</a></h4><p>只需要调整 app.json -&gt; pages 数组中页面路径的前后顺序，即可修改项目的首页。小程序会把排在第一位的页 面，当作项目首页进行渲染，如图所示：</p><figure><img src="'+c+`" alt=""><figcaption>image-20250717085606765</figcaption></figure><h3 id="_2-2-wxml-模板" tabindex="-1">2.2 wxml 模板 <a class="header-anchor" href="#_2-2-wxml-模板" aria-label="Permalink to &quot;2.2 wxml 模板&quot;">​</a></h3><p>WXML（WeiXin Markup Language ）是小程序框架设计的一套 标签语言 ，用来构建小程序页面的结构 ，其作 用类似于网页开发中的 HTML 。</p><h4 id="_2-2-1wxml和-html-的区别" tabindex="-1">2.2.1WXML和 HTML 的区别 <a class="header-anchor" href="#_2-2-1wxml和-html-的区别" aria-label="Permalink to &quot;2.2.1WXML和 HTML 的区别&quot;">​</a></h4><p>① 标签名称不同</p><ul><li>HTML （div, span, img , a a）</li><li>WXMLWXML（view, text, image, navigator navigator）</li></ul><p>② 属性节点不同</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;超链接&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">navigator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/pages/home/home&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">navigator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>③ 提供了类似于 Vue 中的模板语法</p><ul><li>数据绑定</li><li>列表渲染</li><li>条件渲染</li></ul><h3 id="_2-3-wxss-样式" tabindex="-1">2.3 wxss 样式 <a class="header-anchor" href="#_2-3-wxss-样式" aria-label="Permalink to &quot;2.3 wxss 样式&quot;">​</a></h3><p>WXSS (WeiXin Style Sheets)是一套 样式语言 ，用于描述 WXML 的组件样式，类似于网页开发中的 CSS 。</p><p>WXSS和 CSS 的区别： ① 新增了 rpx 尺寸单位</p><ul><li>CSS 中需要手动进行像素单位换算，例如 rem</li><li>WXSS 在底层支持新的尺寸单位 rpx ，在不同大小的屏幕上小程序会自动进行换算</li></ul><p>② 提供了全局的样式和局部样式</p><ul><li>项目根录中的 app.wxss 会作用于所有小程序页面</li><li>局部页面的 .wxss 样式仅对当前页面生效</li></ul><p>③ WXSS 仅支持部分 CSS 选择器</p><ul><li>.class 和 #id  element  并集选择器、后代选择器  ::after 和 ::before 等伪类选择器</li></ul><h3 id="_2-4-js-文件" tabindex="-1">2.4 .js 文件 <a class="header-anchor" href="#_2-4-js-文件" aria-label="Permalink to &quot;2.4 .js 文件&quot;">​</a></h3><p>小程序中的 JS 文件分为三大类，分别是：</p><ul><li>① app.js - 是整个小程序项目的入口文件 ，通过调用 App() 函数 来启动整个小程序</li><li>② 页面的 .js 文件 - 是页面的入口文件 ，通过调用 Page() 函数 来创建并运行页面</li><li>③ 普通的 .js 文件 - 是普通的功能模块文件 ，用来封装 公共的函数或属性 供页面使用</li></ul><h2 id="_3-小程序的宿主环境" tabindex="-1">3. 小程序的宿主环境 <a class="header-anchor" href="#_3-小程序的宿主环境" aria-label="Permalink to &quot;3. 小程序的宿主环境&quot;">​</a></h2><p>是小程序的宿主环境 ，如图所示：</p><figure><img src="`+p+'" alt=""><figcaption>image-20250717092846639</figcaption></figure><p>小程序 借助宿主环境提供的能力 ，可以完成许多普通网页无法完成的功能，例如：微信扫码、微信支付、微信登录、地理定位、etc…</p><p>宿主环境包含的内容：① 通信模型 ② 运行机制 ③ 组件 ④ API</p><h3 id="_3-1-通信的主体" tabindex="-1">3.1 通信的主体 <a class="header-anchor" href="#_3-1-通信的主体" aria-label="Permalink to &quot;3.1 通信的主体&quot;">​</a></h3><p>小程序中通信的主体是 渲染层 和逻辑层 ，其中： ① WXML 模板和 WXSS 样式工作在渲染层 ② JS 脚本工作在逻辑层</p><figure><img src="'+h+'" alt=""><figcaption>image-20250717093239611</figcaption></figure><h3 id="_3-2-通信模型" tabindex="-1">3.2 通信模型 <a class="header-anchor" href="#_3-2-通信模型" aria-label="Permalink to &quot;3.2 通信模型&quot;">​</a></h3><p>小程序中的通信模型分为两部分：</p><ul><li>① 渲染层和逻辑层之间的通信 =&gt; 由微信客户端进行转发</li><li>② 逻辑层和第三方服务器之间的通信 =&gt; 由微信客户端进行转发</li></ul><h3 id="_3-3-运行机制" tabindex="-1">3.3 运行机制 <a class="header-anchor" href="#_3-3-运行机制" aria-label="Permalink to &quot;3.3 运行机制&quot;">​</a></h3><p>小程序启动的过程：</p><ul><li>① 把小程序的代码包下载到本地</li><li>② 解析 app.json 全局配置文件</li><li>③ 执行 app.js 小程序入口文件， 调用 App() 创建小程序实例</li><li>④ 渲染小程序首页</li><li>⑤ 小程序启动完</li></ul><p>页面渲染的过程：</p><ul><li>① 加载解析页面的 .json 配置文件</li><li>② 加载页面的 .wxml 模板和 .wxss 样式</li><li>③ 执行页面的 .js 文件， 调用 Page() 创建页面实例</li><li>④ 页面渲染完成</li></ul><h3 id="_3-4-组件" tabindex="-1">3.4 组件 <a class="header-anchor" href="#_3-4-组件" aria-label="Permalink to &quot;3.4  组件&quot;">​</a></h3><h4 id="_3-4-1-组件分类" tabindex="-1">3.4.1 组件分类 <a class="header-anchor" href="#_3-4-1-组件分类" aria-label="Permalink to &quot;3.4.1 组件分类&quot;">​</a></h4><p>小程序中的组件也是由宿主环境提供的，开发者可以基于组件快速搭建出漂亮的页面结构。官方把小程序的组件分为了 9 大类，分别是：</p><ul><li>① 视图容器</li><li>② 基础内容</li><li>③ 表单组件</li><li>④ 导航组件</li><li>⑤ 媒体组件</li><li>⑥ map 地图组件</li><li>⑦ canvas 画布组件</li><li>⑧ 开放能力</li><li>⑨ 无障碍访问</li></ul><h4 id="_3-4-2-常用的视图容器分类组件" tabindex="-1">3.4.2 常用的视图容器分类组件 <a class="header-anchor" href="#_3-4-2-常用的视图容器分类组件" aria-label="Permalink to &quot;3.4.2 常用的视图容器分类组件&quot;">​</a></h4><p>① view</p><ul><li>普通视图区域</li><li>类似于 HTML 中的 div ，是一个块级元素</li><li>常用来实现页面的布局效果</li></ul><p>② scrollscroll-view</p><ul><li>可滚动的视图区域</li><li>常用来实现滚动列表效果</li></ul><p>③ swiper 和 swiperswiper-item</p><ul><li>轮播图容器组件 和 轮播图 item 组</li></ul><h4 id="_3-4-3-view-组件的基本使用" tabindex="-1">3.4.3 view 组件的基本使用 <a class="header-anchor" href="#_3-4-3-view-组件的基本使用" aria-label="Permalink to &quot;3.4.3 view 组件的基本使用&quot;">​</a></h4><p>实现如图的flex布局效果：</p><figure><img src="'+g+'" alt=""><figcaption>image-20250717094447850</figcaption></figure><h4 id="_3-4-4-scroll-view-的基本使用" tabindex="-1">3.4.4 scroll-view 的基本使用 <a class="header-anchor" href="#_3-4-4-scroll-view-的基本使用" aria-label="Permalink to &quot;3.4.4 scroll-view 的基本使用&quot;">​</a></h4><p>纵向滚动效果：</p><figure><img src="'+k+'" alt=""><figcaption>image-20250717094631089</figcaption></figure><h4 id="_3-4-5-swiper-和-swiper-item-组件的基本使用" tabindex="-1">3.4.5 swiper 和 swiper-item 组件的基本使用 <a class="header-anchor" href="#_3-4-5-swiper-和-swiper-item-组件的基本使用" aria-label="Permalink to &quot;3.4.5 swiper 和 swiper-item 组件的基本使用&quot;">​</a></h4><p>轮播效果：</p><figure><img src="'+y+`" alt=""><figcaption>image-20250717094748324</figcaption></figure><h4 id="_3-4-6-swiper-的常用属性" tabindex="-1">3.4.6 swiper 的常用属性 <a class="header-anchor" href="#_3-4-6-swiper-的常用属性" aria-label="Permalink to &quot;3.4.6 swiper 的常用属性&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>indicator-dots</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否显示面板指示点</td></tr><tr><td style="text-align:center;"><code>indicator-color</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;rgba(0, 0, 0, .3)&#39;</code></td><td style="text-align:center;">指示点颜色</td></tr><tr><td style="text-align:center;"><code>indicator-active-color</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;#000000&#39;</code></td><td style="text-align:center;">当前选中的指示点颜色</td></tr><tr><td style="text-align:center;"><code>autoplay</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否自动切换</td></tr><tr><td style="text-align:center;"><code>interval</code></td><td style="text-align:center;">Number</td><td style="text-align:center;"><code>3000</code></td><td style="text-align:center;">自动切换时间间隔（单位：毫秒）</td></tr><tr><td style="text-align:center;"><code>duration</code></td><td style="text-align:center;">Number</td><td style="text-align:center;"><code>500</code></td><td style="text-align:center;">滑动动画时长（单位：毫秒）</td></tr><tr><td style="text-align:center;"><code>circular</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否采用衔接滑动（循环切换）</td></tr><tr><td style="text-align:center;"><code>vertical</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">滑动方向是否为纵向（默认横向）</td></tr><tr><td style="text-align:center;"><code>previous-margin</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;0px&#39;</code></td><td style="text-align:center;">前边距，可用于露出前一项的一小部分（支持 <code>rpx</code>/<code>px</code>）</td></tr><tr><td style="text-align:center;"><code>next-margin</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;0px&#39;</code></td><td style="text-align:center;">后边距，可用于露出后一项的一小部分（支持 <code>rpx</code>/<code>px</code>）</td></tr><tr><td style="text-align:center;"><code>display-multiple-items</code></td><td style="text-align:center;">Number</td><td style="text-align:center;"><code>1</code></td><td style="text-align:center;">同时显示的滑块数量（默认 <code>1</code>，最多 <code>10</code>）</td></tr><tr><td style="text-align:center;"><code>skip-hidden-item-layout</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否跳过未显示的滑块布局（提升性能）</td></tr><tr><td style="text-align:center;"><code>bindchange</code></td><td style="text-align:center;">EventHandle</td><td style="text-align:center;">-</td><td style="text-align:center;"><code>current</code> 改变时触发的事件（事件对象 <code>e.detail.current</code> 为当前索引）</td></tr><tr><td style="text-align:center;"><code>bindtransition</code></td><td style="text-align:center;">EventHandle</td><td style="text-align:center;">-</td><td style="text-align:center;">滑动动画开始时触发的事件</td></tr><tr><td style="text-align:center;"><code>bindanimationfinish</code></td><td style="text-align:center;">EventHandle</td><td style="text-align:center;">-</td><td style="text-align:center;">滑动动画结束时触发的事件</td></tr></tbody></table><p>以下是 <strong>微信小程序 Swiper 组件</strong> 的常用属性表格（基于 <code>swiper</code> 组件的官方文档）：</p><table tabindex="0"><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>indicator-dots</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否显示面板指示点</td></tr><tr><td style="text-align:center;"><code>indicator-color</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;rgba(0, 0, 0, .3)&#39;</code></td><td style="text-align:center;">指示点颜色</td></tr><tr><td style="text-align:center;"><code>indicator-active-color</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;#000000&#39;</code></td><td style="text-align:center;">当前选中的指示点颜色</td></tr><tr><td style="text-align:center;"><code>autoplay</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否自动切换</td></tr><tr><td style="text-align:center;"><code>interval</code></td><td style="text-align:center;">Number</td><td style="text-align:center;"><code>3000</code></td><td style="text-align:center;">自动切换时间间隔（单位：毫秒）</td></tr><tr><td style="text-align:center;"><code>duration</code></td><td style="text-align:center;">Number</td><td style="text-align:center;"><code>500</code></td><td style="text-align:center;">滑动动画时长（单位：毫秒）</td></tr><tr><td style="text-align:center;"><code>circular</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否采用衔接滑动（循环切换）</td></tr><tr><td style="text-align:center;"><code>vertical</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">滑动方向是否为纵向（默认横向）</td></tr><tr><td style="text-align:center;"><code>previous-margin</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;0px&#39;</code></td><td style="text-align:center;">前边距，可用于露出前一项的一小部分（支持 <code>rpx</code>/<code>px</code>）</td></tr><tr><td style="text-align:center;"><code>next-margin</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&#39;0px&#39;</code></td><td style="text-align:center;">后边距，可用于露出后一项的一小部分（支持 <code>rpx</code>/<code>px</code>）</td></tr><tr><td style="text-align:center;"><code>display-multiple-items</code></td><td style="text-align:center;">Number</td><td style="text-align:center;"><code>1</code></td><td style="text-align:center;">同时显示的滑块数量（默认 <code>1</code>，最多 <code>10</code>）</td></tr><tr><td style="text-align:center;"><code>skip-hidden-item-layout</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">是否跳过未显示的滑块布局（提升性能）</td></tr><tr><td style="text-align:center;"><code>bindchange</code></td><td style="text-align:center;">EventHandle</td><td style="text-align:center;">-</td><td style="text-align:center;"><code>current</code> 改变时触发的事件（事件对象 <code>e.detail.current</code> 为当前索引）</td></tr><tr><td style="text-align:center;"><code>bindtransition</code></td><td style="text-align:center;">EventHandle</td><td style="text-align:center;">-</td><td style="text-align:center;">滑动动画开始时触发的事件</td></tr><tr><td style="text-align:center;"><code>bindanimationfinish</code></td><td style="text-align:center;">EventHandle</td><td style="text-align:center;">-</td><td style="text-align:center;">滑动动画结束时触发的事件</td></tr></tbody></table><hr><p><strong>子组件 <code>swiper-item</code> 的属性</strong>：</p><table tabindex="0"><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>item-id</code></td><td style="text-align:center;">String</td><td style="text-align:center;">该项的唯一标识（用于 <code>scroll-into-view</code> 定位）</td></tr></tbody></table><hr><p><strong>示例代码</strong>：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">swiper</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  indicator-dots</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{true}}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  autoplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{true}}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3000&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;500&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  circular</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{true}}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  vertical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{false}}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bindchange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;swiperChange&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">swiper-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Slide 1&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">swiper-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">swiper-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Slide 2&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">swiper-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">swiper-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Slide 3&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">swiper-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">swiper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="_3-4-7-常用的基础内容组件" tabindex="-1">3.4.7 常用的基础内容组件 <a class="header-anchor" href="#_3-4-7-常用的基础内容组件" aria-label="Permalink to &quot;3.4.7 常用的基础内容组件&quot;">​</a></h4><p>① text</p><ul><li>文本组件</li><li>类似于 HTML 中的 span 标签，是一个行内元素</li></ul><p>通过 text 组件的 selectable 属性，实现长按选中文本内容的效果：</p><figure><img src="`+E+'" alt=""><figcaption>image-20250717111030396</figcaption></figure><p>② richrich-text</p><ul><li>富文本组件</li><li>支持把 HTML 字符串渲染为 WXML 结构</li></ul><p>通过 richrich-text 组件的 nodes 属性节点， 把 HTML 字符串渲染为对应的 UI 结构 ：</p><figure><img src="'+u+'" alt=""><figcaption>image-20250717111121892</figcaption></figure><h4 id="_3-4-8-其他常用组件" tabindex="-1">3.4.8 其他常用组件 <a class="header-anchor" href="#_3-4-8-其他常用组件" aria-label="Permalink to &quot;3.4.8 其他常用组件&quot;">​</a></h4><p>① button</p><ul><li>按钮组件</li><li>功能比 HTML 中的 button 按钮丰富</li><li>通过 openopen-type 属性可以调用微信提供的各种功能（客服、转发、获取用户授权、获取用户信息等）</li></ul><p>② image</p><ul><li>图片组件</li><li>image 组件默认宽度约 300px 、高度约 240px</li></ul><p>③ navigator</p><ul><li>页面导航组件</li><li>类似于 HTML 中的 a 链接</li></ul><h4 id="_3-4-9-button-的基本使用" tabindex="-1">3.4.9 button 的基本使用 <a class="header-anchor" href="#_3-4-9-button-的基本使用" aria-label="Permalink to &quot;3.4.9 button 的基本使用&quot;">​</a></h4><figure><img src="'+x+`" alt=""><figcaption>image-20250717111441715</figcaption></figure><h4 id="_3-4-10-image-组件的-mode-属性" tabindex="-1">3.4.10 image 组件的 mode 属性 <a class="header-anchor" href="#_3-4-10-image-组件的-mode-属性" aria-label="Permalink to &quot;3.4.10 image 组件的 mode 属性&quot;">​</a></h4><p>image 组件的 mode 属性用来指定图片的 裁剪 和缩放 模式，常用的 mode 属性值：</p><table tabindex="0"><thead><tr><th style="text-align:center;"><code>mode</code> 值</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>scaleToFill</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>缩放模式</strong>：不保持纵横比缩放图片，使图片的宽高完全拉伸至填满组件。</td></tr><tr><td style="text-align:center;"><code>aspectFit</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>缩放模式</strong>：保持纵横比缩放图片，使图片的长边能完全显示出来（可能留白）。</td></tr><tr><td style="text-align:center;"><code>aspectFill</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>缩放模式</strong>：保持纵横比缩放图片，只保证图片的短边能完全显示出来（可能裁剪）。</td></tr><tr><td style="text-align:center;"><code>widthFix</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>缩放模式</strong>：宽度不变，高度自动变化，保持原图宽高比（需确保 <code>width</code> 已设置）。</td></tr><tr><td style="text-align:center;"><code>top</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的顶部区域（需配合 <code>height</code> 使用）。</td></tr><tr><td style="text-align:center;"><code>bottom</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的底部区域。</td></tr><tr><td style="text-align:center;"><code>center</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的中间区域。</td></tr><tr><td style="text-align:center;"><code>left</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的左边区域。</td></tr><tr><td style="text-align:center;"><code>right</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的右边区域。</td></tr><tr><td style="text-align:center;"><code>top left</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的左上角区域。</td></tr><tr><td style="text-align:center;"><code>top right</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的右上角区域。</td></tr><tr><td style="text-align:center;"><code>bottom left</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的左下角区域。</td></tr><tr><td style="text-align:center;"><code>bottom right</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><strong>裁剪模式</strong>：不缩放图片，只显示图片的右下角区域。</td></tr></tbody></table><hr><p><strong>分类总结</strong>：</p><ol><li><strong>缩放模式</strong>（保持纵横比，可能留白或填满）： <ul><li><code>scaleToFill</code>（拉伸填满，可能变形）</li><li><code>aspectFit</code>（完整显示图片，可能留白）</li><li><code>aspectFill</code>（完整显示短边，可能裁剪长边）</li><li><code>widthFix</code>（宽度固定，高度按比例自适应）</li></ul></li><li><strong>裁剪模式</strong>（不缩放图片，直接裁剪显示部分区域）： <ul><li><code>top</code> / <code>bottom</code> / <code>center</code> / <code>left</code> / <code>right</code>（单方向裁剪）</li><li><code>top left</code> / <code>top right</code> / <code>bottom left</code> / <code>bottom right</code>（四角裁剪）</li></ul></li></ol><hr><p><strong>使用示例</strong>：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/image.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aspectFill&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width: 300px; height: 200px;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>关键说明</strong>：</p><ol><li><strong><code>scaleToFill</code></strong>： <ul><li>图片会被拉伸以填满组件，可能导致变形（不推荐用于需要保持比例的场景）。</li></ul></li><li><strong><code>aspectFit</code></strong>： <ul><li>图片完整显示，但可能留白（适合需要完整展示图片内容的场景，如头像）。</li></ul></li><li><strong><code>aspectFill</code></strong>： <ul><li>图片短边完整显示，长边可能被裁剪（适合需要焦点展示的场景，如封面图）。</li></ul></li><li><strong><code>widthFix</code></strong>： <ul><li>需明确设置 <code>width</code>，高度会按原图比例自动计算（适合瀑布流布局）。</li></ul></li><li><strong>裁剪模式</strong>： <ul><li>适用于固定尺寸容器中显示图片的特定部分（如圆形头像需配合 <code>border-radius: 50%</code>）。</li></ul></li></ol><h2 id="_4-api" tabindex="-1">4. api <a class="header-anchor" href="#_4-api" aria-label="Permalink to &quot;4. api&quot;">​</a></h2><h3 id="_4-1-概述" tabindex="-1">4.1 概述 <a class="header-anchor" href="#_4-1-概述" aria-label="Permalink to &quot;4.1 概述&quot;">​</a></h3><p>小程序中的 API 是由宿主环境提供的 ，通过这些丰富的小程序 API ，开发者可以方便的调用微信提供的能力例如：获取用户信息、本地存储、支付功能等。</p><h3 id="_4-2-三大分类" tabindex="-1">4.2 三大分类 <a class="header-anchor" href="#_4-2-三大分类" aria-label="Permalink to &quot;4.2 三大分类&quot;">​</a></h3><p>小程序官方把 API 分为了如下 3 大类： ① 事件监听 API</p><ul><li>特点：以 on 开头，用来 监听某些事件的触发</li><li>举例： wx.onWindowResize (function callback) 监听窗口尺寸变化的事件</li></ul><p>② 同步 API</p><ul><li>特点 1：以 Sync 结尾的 API 都是同步 API</li><li>特点 2：同步 API 的执行结果，可以通过函数返回值直接获取，如果执行出错会抛出异常</li><li>举例： wx.setStorageSync (&#39;key&#39;, &#39;value&#39;) 向本地存储中写入内容</li></ul><p>③ 异步 API</p><ul><li>特点：类似于 jQuery 中的 $.ajax(options) 函数，需要通过 success 、fail 、complete 接收调用的结果</li><li>举例： wx.requestrequest() 发起网络数据请求，通过 success 回调函数接收据</li></ul>`,135)])])}const j=i(m,[["render",b]]);export{A as __pageData,j as default};
