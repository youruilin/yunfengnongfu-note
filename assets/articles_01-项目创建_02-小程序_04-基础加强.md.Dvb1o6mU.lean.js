import{_ as e,c as p,o as h,ag as l,j as s,a,t}from"./chunks/framework.JB0BnZq8.js";const r="/vitepress_init/assets/image-%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6.dqPfdeV5.png",k="/vitepress_init/assets/image-%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F%E9%9A%94%E7%A6%BB.Dlyti-4M.png",d="/vitepress_init/assets/image-%E6%8F%92%E6%A7%BD.jh8rd826.png",E="/vitepress_init/assets/image-behaviors.Cv5-9qAk.png",D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/01-项目创建/02-小程序/04-基础加强.md","filePath":"articles/01-项目创建/02-小程序/04-基础加强.md","lastUpdated":1754559945000}'),o={name:"articles/01-项目创建/02-小程序/04-基础加强.md"},c={class:"details custom-block"},g={tabindex:"0"},b={tabindex:"0"};function u(n,i,y,m,F,v){return h(),p("div",null,[i[26]||(i[26]=l("",63)),s("details",c,[i[19]||(i[19]=s("summary",null,"也要看情况",-1)),i[20]||(i[20]=s("p",null,[a("因为**"),s("code",null,"properties"),a(" 定义的属性也会挂载到组件实例的 data 上**（表现得像是 data 的一部分），所以你可以用 "),s("code",null,"setData()"),a(" 来更新它，就像你更新 "),s("code",null,"data"),a(" 一样。")],-1)),i[21]||(i[21]=s("p",null,"但是：逻辑上效果是否生效，要看「绑定方式」",-1)),s("table",g,[i[5]||(i[5]=s("thead",null,[s("tr",null,[s("th",null,"使用方式"),s("th",null,[s("code",null,"setData({ max: ... })"),a(" 是否有效")]),s("th",null,"建议")])],-1)),s("tbody",null,[i[4]||(i[4]=s("tr",null,[s("td",null,"属性未绑定（写死或不传）"),s("td",null,"✅ 有效"),s("td",null,"可以直接改")],-1)),s("tr",null,[s("td",null,[i[0]||(i[0]=a("属性绑定（如 ",-1)),s("code",null,'max="'+t(n.value)+'"',1),i[1]||(i[1]=a("）",-1))]),i[2]||(i[2]=s("td",null,"❌ 无效，会被外部覆盖（可短暂修改）",-1)),i[3]||(i[3]=s("td",null,"触发事件通知父组件修改",-1))])])]),i[22]||(i[22]=l("",14)),s("p",null,[i[6]||(i[6]=a("但：当父组件中使用 ",-1)),s("code",null,'<my-component max="'+t(n.anyValue)+'" />',1),i[7]||(i[7]=a(" 时，组件内部 ",-1)),i[8]||(i[8]=s("code",null,"setData({ max: ... })",-1)),i[9]||(i[9]=a(" 虽然 ",-1)),i[10]||(i[10]=s("strong",null,"语法合法",-1)),i[11]||(i[11]=a("，但",-1)),i[12]||(i[12]=s("strong",null,"不会生效",-1)),i[13]||(i[13]=a("，因为：",-1))]),i[23]||(i[23]=s("ul",null,[s("li",null,[s("code",null,"max"),a(" 是由父组件"),s("strong",null,"绑定传入"),a("的（受控属性），在子组件里修改 "),s("code",null,"max"),a("，"),s("strong",null,"下一轮渲染时会被父组件的值重新覆盖"),a("。")]),s("li",null,"也就是说，页面上可能会短暂看到变化，但很快就又变回原值。")],-1)),i[24]||(i[24]=s("hr",null,null,-1)),i[25]||(i[25]=s("p",null,"📌 总结一下",-1)),s("table",b,[i[18]||(i[18]=s("thead",null,[s("tr",null,[s("th",null,"用法"),s("th",null,"是否“绑定”"),s("th",null,"说明")])],-1)),s("tbody",null,[s("tr",null,[s("td",null,[s("code",null,'<my-component max="'+t(n.value)+'" />',1)]),i[14]||(i[14]=s("td",null,"✅ 是绑定",-1)),i[15]||(i[15]=s("td",null,"max 属性受父组件数据控制，组件内部不能直接改",-1))]),i[16]||(i[16]=s("tr",null,[s("td",null,[s("code",null,'<my-component max="5" />')]),s("td",null,"❌ 非绑定"),s("td",null,"max 是字符串形式字面量，可以在组件内部用 setData 修改")],-1)),i[17]||(i[17]=s("tr",null,[s("td",null,[s("code",null,"<my-component />")]),s("td",null,"❌ 非绑定"),s("td",null,"使用默认值，也可以在组件内部修改")],-1))])])]),i[27]||(i[27]=l("",105))])}const A=e(o,[["render",u]]);export{D as __pageData,A as default};
