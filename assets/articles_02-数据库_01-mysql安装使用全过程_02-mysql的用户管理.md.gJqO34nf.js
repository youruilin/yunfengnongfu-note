import{_ as s,c as n,o as t,ag as e}from"./chunks/framework.JB0BnZq8.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/02-数据库/01-mysql安装使用全过程/02-mysql的用户管理.md","filePath":"articles/02-数据库/01-mysql安装使用全过程/02-mysql的用户管理.md","lastUpdated":1752762794000}'),l={name:"articles/02-数据库/01-mysql安装使用全过程/02-mysql的用户管理.md"};function p(d,a,r,i,c,o){return t(),n("div",null,[...a[0]||(a[0]=[e(`<h2 id="_1-sql通用语法" tabindex="-1">1. sql通用语法 <a class="header-anchor" href="#_1-sql通用语法" aria-label="Permalink to &quot;1. sql通用语法&quot;">​</a></h2><p>全称 Structured Query Language，结构化查询语言。操作关系型数据库的编程语言，定义了一套操作关系型数据库统一标准 。</p><p>1）. SQL语句可以单行或多行书写，以分号结尾；</p><p>2）. SQL语句可以使用空格/缩进来增强语句的可读性；</p><p>3）. MySQL数据库的SQL语句不区分大小写，关键字建议使用大写；</p><p>4）. 注释：</p><ul><li>单行注释：-- 注释内容 或 # 注释内容</li><li>多行注释：/* 注释内容 */</li></ul><h2 id="_2-sql分类" tabindex="-1">2. sql分类 <a class="header-anchor" href="#_2-sql分类" aria-label="Permalink to &quot;2. sql分类&quot;">​</a></h2><table tabindex="0"><thead><tr><th>类别</th><th>名称</th><th>关键语句</th><th>作用</th></tr></thead><tbody><tr><td>DDL</td><td>数据定义语言</td><td>CREATE、ALTER、DROP、TRUNCATE</td><td>定义和管理表结构</td></tr><tr><td>DML</td><td>数据操作语言</td><td>INSERT、UPDATE、DELETE</td><td>操作数据内容</td></tr><tr><td>DQL</td><td>数据查询语言</td><td>SELECT</td><td>查询数据</td></tr><tr><td>DCL</td><td>数据控制语言</td><td>GRANT、REVOKE、COMMIT、ROLLBACK</td><td>权限与事务控制</td></tr></tbody></table><h3 id="_2-1-ddl" tabindex="-1">2.1 DDL <a class="header-anchor" href="#_2-1-ddl" aria-label="Permalink to &quot;2.1 DDL&quot;">​</a></h3><p>Data Definition Language，数据定义语言，用来定义数据库对象(数据库，表，字段) 。</p><h4 id="_2-1-1-数据库操作" tabindex="-1">2.1.1 数据库操作 <a class="header-anchor" href="#_2-1-1-数据库操作" aria-label="Permalink to &quot;2.1.1 数据库操作&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 查询所有数据库</span></span>
<span class="line"><span>show databases;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 查询当前数据库 </span></span>
<span class="line"><span>slect database();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#创建数据库</span></span>
<span class="line"><span>create database [if not exits] lychee [dedault charset 字符集] [collate 排序规则];</span></span>
<span class="line"><span></span></span>
<span class="line"><span>CREATE DATABASE lychee CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,13)])])}const u=s(l,[["render",p]]);export{h as __pageData,u as default};
