import{_ as a,c as n,o as e,ag as l}from"./chunks/framework.BjB3rnhW.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"jp/articles/02-数据库/01-mysql安装使用全过程/01-mysql的初始化.md","filePath":"jp/articles/02-数据库/01-mysql安装使用全过程/01-mysql的初始化.md","lastUpdated":1752902037000}'),p={name:"jp/articles/02-数据库/01-mysql安装使用全过程/01-mysql的初始化.md"};function t(i,s,d,r,c,o){return e(),n("div",null,[...s[0]||(s[0]=[l(`<h2 id="_1-安装mysql-生产环境" tabindex="-1">1. 安装mysql（生产环境） <a class="header-anchor" href="#_1-安装mysql-生产环境" aria-label="Permalink to &quot;1. 安装mysql（生产环境）&quot;">​</a></h2><p>直接上代码：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 更新系统包</span></span>
<span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt upgrade</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 安装 nvm</span></span>
<span class="line"><span>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span></span>
<span class="line"><span>// 安装完成后，按照输出的提示重启终端，或者手动运行以下命令来加载 nvm：</span></span>
<span class="line"><span>source ~/.bashrc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nvm --version</span></span>
<span class="line"><span>nvm install 18  # 安装 Node.js 18.x 版本</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 在 EC2 上安装 MySQL 数据库：</span></span>
<span class="line"><span>sudo apt install mysql-server</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 启动</span></span>
<span class="line"><span>sudo systemctl start mysql</span></span>
<span class="line"><span>// 开机自启</span></span>
<span class="line"><span>sudo systemctl enable mysql</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_2-初始化" tabindex="-1">2. 初始化 <a class="header-anchor" href="#_2-初始化" aria-label="Permalink to &quot;2. 初始化&quot;">​</a></h2><p>root用户执行<code>sudo mysql_secure_installation</code>，进行数据库初始化：</p><table tabindex="0"><thead><tr><th>步骤</th><th>作用</th><th>推荐操作</th></tr></thead><tbody><tr><td>启用密码验证组件</td><td>防止设置弱密码</td><td>是</td></tr><tr><td>root 认证方式</td><td>默认为 auth_socket 插件</td><td>本地保留 / 远程改为密码</td></tr><tr><td>删除匿名用户</td><td>防止无授权访问</td><td>是</td></tr><tr><td>禁止 root 远程登录</td><td>降低被暴力破解风险</td><td>是</td></tr><tr><td>删除 test 数据库</td><td>减少潜在安全风险</td><td>是</td></tr><tr><td>重新加载权限表</td><td>使配置生效</td><td>是</td></tr></tbody></table><h2 id="_3-创建用户-以lychee图床为例" tabindex="-1">3. 创建用户（以lychee图床为例） <a class="header-anchor" href="#_3-创建用户-以lychee图床为例" aria-label="Permalink to &quot;3. 创建用户（以lychee图床为例）&quot;">​</a></h2><ul><li><p>接下来，创建数据库表，以及lychee的专属用户：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE DATABASE lychee CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>CREATE USER &#39;lychee&#39;@&#39;%&#39; IDENTIFIED BY &#39;386898136Di!&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON lychee.* TO &#39;lychee&#39;@&#39;%&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FLUSH PRIVILEGES;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p>或者，授予lychee用户所有权限：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT ALL PRIVILEGES ON lychee.* TO &#39;lychee&#39;@&#39;%&#39;;</span></span>
<span class="line"><span>FLUSH PRIVILEGES;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>它的意思是：</p><ul><li><strong>授予用户 <code>&#39;lychee&#39;</code></strong>（用户名是 <code>lychee</code>）</li><li><strong>从任意主机（<code>&#39;%&#39;</code> 表示任何 IP 地址）</strong></li><li><strong>对数据库 <code>lychee</code> 下的 <code>所有表（\\*</code>）\`</strong></li><li><strong>赋予 <code>ALL PRIVILEGES</code>（所有权限）</strong></li></ul><p>⚠️ 注意：<code>GRANT ALL PRIVILEGES ON 数据库.*</code> <strong>不会赋予用户全局权限</strong>（比如创建用户、修改全局配置等），它<strong>仅限于指定的数据库（这里是 <code>lychee</code>）下的所有表</strong>。</p></li></ul><h2 id="_4-允许监听远程链接" tabindex="-1">4. 允许监听远程链接 <a class="header-anchor" href="#_4-允许监听远程链接" aria-label="Permalink to &quot;4. 允许监听远程链接&quot;">​</a></h2><ul><li><p><strong>以 root 权限递归搜索 <code>/etc/mysql/</code> 目录下所有文件中包含字符串 <code>&quot;bind-address&quot;</code> 的行</strong>。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo grep -r &quot;bind-address&quot; /etc/mysql/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>默认得到的输出是：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/etc/mysql/mysql.conf.d/mysqld.cnf:bind-address = 127.0.0.1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这表示：</p><ul><li>在文件 <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code> 中找到了包含 <code>bind-address</code> 的配置项；</li><li>该配置项的值是 <code>bind-address = 127.0.0.1</code>。</li></ul><p>它的意思是：</p><blockquote><p>MySQL 服务器<strong>只监听本地回环地址（localhost，即 127.0.0.1）上的连接请求</strong>，<strong>不接受来自其他机器（如局域网或互联网）的连接</strong>。</p></blockquote><p>你需要用编辑器打开文件，比如：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>找到 <code>bind-address</code> 行，将其改为：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bind-address = 0.0.0.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>保存并重启 MySQL 服务：；</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl restart mysql</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，mysql就可以被远程访问了。</p></li></ul>`,10)])])}const m=a(p,[["render",t]]);export{u as __pageData,m as default};
